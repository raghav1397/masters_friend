{"version":3,"sources":["constants/routes.js","firebase/firebase.js","firebase/auth.js","firebase/db.js","components/SignOut.js","components/AuthUserContext.js","components/Navigation.js","components/Landing.js","components/SignUp.js","components/PasswordForget.js","components/SignIn.js","components/withAuthorization.js","components/Home.js","components/Account.js","components/Predict.js","components/App.js","components/withAuthentication.js","serviceWorker.js","index.js"],"names":["HOME","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","auth","facebookProvider","GoogleAuthProvider","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordChange","currentUser","updatePassword","GoogleAuthProvide","signInWithPopup","storage","doCreateUser","id","username","ref","set","doCreateFrom","first_name","last_name","grade","gre","work_ex","toefl","uid","lor1","lor2","lor3","lor4","onceGetUsers","once","doGetAnUnser","SignOutButton","color","onClick","AuthUserContext","React","createContext","NavigationNonAuth","light","expand","Link","to","className","navbar","routes","Navigation","Consumer","authUser","userInfo","NavigationAuth","SignOut","LandingPage","INITIAL_STATE","passwordOne","passwordTwo","error","showingAlert","byPropKey","propertyName","value","SignUpForm","state","onSubmit","event","history","props","console","log","then","setState","push","catch","timer","err","preventDefault","setTimeout","this","isInvalid","onLoad","message","for","type","name","placeholder","onChange","e","target","disabled","Component","SignUpLink","withRouter","PasswordForgetForm1","PasswordForgetLink","PasswordForgetPage","SignInForm","facebookLogin","user","displayName","withAuthorization","authCondition","WithAuthorization","onAuthStateChanged","loggedUser","HomePage","users","loading","update","we","resume","sop","entry","redirect","resume1","document","getElementById","files","resume_name","sop1","sop_name","File","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","axios","post","toString","response","res","val","element","options","label","noValidate","htmlFor","pattern","defaultValue","updateStatelor1","bind","updateStatelor2","updateStatelor3","updateStatelor4","AccountPage","window","location","reload","providerData","providerId","Predict","withAuthentication","Provider","BrowserRouter","Route","exact","path","component","SignUpPage","SignInPage","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2fa7c306.chunk.js","sourcesContent":["export const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const LANDING = \"/\";\nexport const HOME = \"/home\";\nexport const ACCOUNT = \"/account\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\nexport const PREDICT = \"/predict\";\n// export const PasswordForgetaccount = \"/PasswordForgetaccount\";\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\n//this config is being used for both development and production environment. Though, it is a best practice creating a second project and have two configs: one for production (prodConfig) and another for development (devConfig), so you choose the config based on the environment.\n\nconst config = {\n  apiKey: \"AIzaSyBQokv7SWh03xXOKW4mHhdaI8rEyHzkAis\",\n  authDomain: \"masters-273323.firebaseapp.com\",\n  databaseURL: \"https://masters-273323.firebaseio.com\",\n  projectId: \"masters-273323\",\n  storageBucket: \"masters-273323.appspot.com\",\n  messagingSenderId: \"136049144384\",\n  appId: \"1:136049144384:web:02ac0c31787dedbbc365a5\",\n  measurementId: \"G-0RL05VW1X5\"\n};\n\nif (!firebase.apps.length) {\n  //initializing with the config object\n  firebase.initializeApp(config);\n}\n\n//separting database API and authentication\nconst db = firebase.database();\nconst auth = firebase.auth();\n\nconst facebookProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, facebookProvider };\n","import { auth , facebookProvider} from \"./firebase\"; //importing the previously instatiated object from the firebase.js config file\nimport 'firebase/storage';\nimport firebase from 'firebase/app';\n//## below the authentication functions ##\n\n//sign up\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\n  auth.createUserWithEmailAndPassword(email, password);\n\n//sign in\nexport const doSignInWithEmailAndPassword = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\n//sign out\nexport const doSignOut = () => auth.signOut();\n\n//## below are two more functions, for resetting or changing passwords ##\n\n//password reset\nexport const doPasswordReset = email => auth.sendPasswordResetEmail(email);\n\n//password change\nexport const doPasswordChange = password =>\n  auth.currentUser.updatePassword(password);\n\n//#### for\n//     facebook #####\nexport const GoogleAuthProvide = () => auth.signInWithPopup(facebookProvider);\nconst storage = firebase.storage();\nexport {\n  storage, firebase as default\n}","//this is going to store Firebase realtime database API code\nimport { db } from \"./firebase\";\n\n//##########3 user API\n\n//create an user and store it at users/id path (it's an asynchronous func)\nexport const doCreateUser = (id, username, email) =>\n  db.ref(`users/${id}`).set({\n    username,\n    email\n  });\n\n  export const doCreateFrom = ( username, email, first_name,last_name, grade,gre,work_ex,toefl,uid,lor1,lor2,lor3,lor4) =>\n  db.ref(`forms/${uid}`).set({\n    username,\n    email,\n    first_name,\n    last_name,\n    grade,\n    gre,\n    work_ex,\n    toefl,\n    uid,\n    lor1,\n    lor2,\n    lor3,\n    lor4\n  });\n\n//returns all users from firebase realtime db\nexport const onceGetUsers = () => db.ref(\"users\").once(\"value\");\n\nexport const doGetAnUnser = uid => db.ref(`users/${uid}`).once(\"value\");\n\n// other APIs could come below\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\n\nimport { auth } from \"../firebase\";\n\nconst SignOutButton = () => (\n  <Button color=\"info\" onClick={auth.doSignOut}>\n    Sign Out\n  </Button>\n);\n\nexport default SignOutButton;\n","import React from \"react\";\n\nconst AuthUserContext = React.createContext(null); //using React's Context API\n\nexport default AuthUserContext;\n\n\n","import React from \"react\";\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport SignOutButton from \"./SignOut\";\nimport * as routes from \"../constants/routes\";\n\nimport AuthUserContext from \"./AuthUserContext\";\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? <NavigationAuth userInfo={authUser} /> : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationNonAuth = () => (\n  <Navbar color=\"light\" light expand=\"md\">\n    <NavbarBrand>\n      <Link to={routes.LANDING}> Home </Link>\n    </NavbarBrand>\n    <Nav className=\"ml-auto\" navbar>\n    <NavItem>\n        <NavLink>\n          <Link to={routes.HOME}>University Suggestor</Link>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink>\n          <Link to={routes.SIGN_IN}>Sign In</Link>\n        </NavLink>\n      </NavItem>\n    </Nav>\n  </Navbar>\n);\n\nexport default Navigation;\n\nconst NavigationAuth = ({ userInfo }) => (\n  <Navbar color=\"light\" light expand=\"md\">\n    <NavbarBrand>\n      <Link to={routes.LANDING}> Home </Link>\n    </NavbarBrand>\n    <Nav className=\"ml-auto\" navbar>\n      <NavItem>\n        <NavLink>\n          <Link to={routes.HOME}>University Suggestor</Link>\n        </NavLink>\n      </NavItem>\n        <NavItem>\n          <NavLink>\n            <Link to={routes.ACCOUNT}>Account</Link>\n          </NavLink>\n        </NavItem>\n      <NavItem>\n        <SignOutButton />\n      </NavItem>\n    </Nav>\n  </Navbar>\n);\n\n","import React from \"react\";\n\nconst LandingPage = () => (\n  <div>\n    <h1>Friend for your Master's</h1>\n\n    <p>This page is public, accessible by everyone</p>\n\n  </div>\n);\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\n\nimport * as routes from \"../constants/routes\";\nimport { auth, db } from \"../firebase\";\n\nconst SignUpPage = ({ history }) => (\n  <div>\n    <div className=\"div-flex\">\n      <div>\n        <h1 className=\"centered\">Sign Up</h1>\n        <SignUpForm history={history} />\n      </div>\n    </div>\n  </div>\n);\n\n//################### Sign Up Form ###################\nconst INITIAL_STATE = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null,\n  showingAlert: false\n};\n\n//A Higher order function with prop name as key and the value to be assigned to\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nclass SignUpForm extends Component {\n  //defining state\n  state = {\n    ...INITIAL_STATE\n  };\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n    const { history } = this.props;\n    console.log(\"raghav12345\")\n    auth\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      //it the above functions resolves, reset the state to its initial state values, otherwise, set the error object\n      .then(authUser => {\n        console.log(authUser.uid)\n        //creating a user in the database after the sign up through Firebase auth API\n        db.doCreateUser(authUser.uid, username, email)\n          .then(() => {\n            console.log(authUser.uid)\n            this.setState({\n              ...INITIAL_STATE\n            });\n            history.push(routes.HOME); //redirects to Home Page\n          })\n          .catch(error => {\n            console.log(error)\n            this.setState(byPropKey(\"error\", error));\n            this.timer(); //show alert message for some seconds\n          });\n      })\n      .catch(err => {\n        this.setState(byPropKey(\"error\", err));\n        console.log(err)\n        this.timer(); //show alert message for some seconds\n      });\n\n    event.preventDefault(); //prevents refreshing\n  };\n\n  timer = () => {\n    this.setState({\n      showingAlert: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        showingAlert: false\n      });\n    }, 4000);\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n      showingAlert\n    } = this.state;\n    //a boolen to perform validation\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\";\n\n    return (\n      <div>\n        {showingAlert && (\n          <Alert color=\"danger\" onLoad={this.timer}>\n            {error.message}\n          </Alert>\n        )}\n        <Form onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Label for=\"userName\">Full Name</Label>\n            <Input\n              type=\"username\"\n              name=\"username\"\n              id=\"userName\"\n              placeholder=\"John Doe\"\n              value={username}\n              onChange={e =>\n                this.setState(byPropKey(\"username\", e.target.value))\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"exampleEmail\"\n              placeholder=\"user@gmail.com\"\n              value={email}\n              onChange={e => this.setState(byPropKey(\"email\", e.target.value))}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword1\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword1\"\n              placeholder=\"Password\"\n              value={passwordOne}\n              onChange={e =>\n                this.setState(byPropKey(\"passwordOne\", e.target.value))\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword2\">Confirm Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword2\"\n              placeholder=\"Confirm Password\"\n              value={passwordTwo}\n              onChange={e =>\n                this.setState(byPropKey(\"passwordTwo\", e.target.value))\n              }\n            />\n          </FormGroup>\n\n          <div className=\"text-center\">\n            <Button disabled={isInvalid} type=\"submit\">\n              Sign Up\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\n//################### Sign Up Link ###################\n//used in the sign in when the user don't have an account registered yet\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={routes.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\n//exports\nexport default withRouter(SignUpPage); //using a HoC to get access to history\nexport { SignUpForm, SignUpLink };\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\n\nimport { auth } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\n//it resets your password. It doesn’t matter if you are authenticated or not\nconst PasswordForgetPage = () => (\n  <div className=\"div-flex\">\n    <div>\n      <h1 className=\"centered\">Forget Password</h1>\n      <PasswordForgetForm1 />\n    </div>\n  </div>\n);\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\n//################### PasswordForget Form ###################\nconst INITIAL_STATE = {\n  email: \"\",\n  error: null,\n  showingAlert: false\n};\n\n\nclass PasswordForgetForm1 extends Component {\n  state = { ...INITIAL_STATE };\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    auth\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n        this.timer(); //show alert message for some seconds\n      });\n\n    event.preventDefault();\n  };\n\n  timer = () => {\n    this.setState({\n      showingAlert: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        showingAlert: false\n      });\n    }, 4000);\n  };\n\n  render() {\n    const { email, error, showingAlert } = this.state;\n\n    const isInvalid = email === \"\";\n\n    return (\n      <div>\n        {showingAlert && (\n          <Alert color=\"danger\" onLoad={this.timer}>\n            {error.message}\n          </Alert>\n        )}\n\n        <Form onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"exampleEmail\"\n              placeholder=\"user@gmail.com\"\n              value={email}\n              onChange={event =>\n                this.setState(byPropKey(\"email\", event.target.value))\n              }\n            />\n          </FormGroup>\n\n          <div className=\"text-center\">\n            <Button disabled={isInvalid} type=\"submit\">\n              Reset My Password\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\n//################### PasswordForget Link ###################\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={routes.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nexport { PasswordForgetForm1, PasswordForgetLink };\n\n\n","import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\nimport {  GoogleLoginButton } from \"react-social-login-buttons\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport { SignUpLink } from \"./SignUp\";\nimport { PasswordForgetLink } from \"./PasswordForget\";\nimport { auth, db } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\nconst SignInPage = ({ history }) => {\n  return (\n    <div className=\"div-flex\">\n      <div>\n        <h1 className=\"centered\">Sign In</h1>\n        {/* <img src={logo} className=\"App-logo\" alt=\"My logo\" /> */}\n\n        <SignInForm history={history} />\n        <SignUpLink />\n        <PasswordForgetLink />\n      </div>\n    </div>\n  );\n};\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nconst INITIAL_STATE = {\n  email: \"\",\n  password: \"\",\n  error: null,\n  showingAlert: false\n};\n\nclass SignInForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    const { history } = this.props;\n\n    auth\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(routes.HOME);\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n        this.timer(); //defined below\n      });\n\n    event.preventDefault();\n  };\n\n  facebookLogin = () => {\n    const { history } = this.props;\n    auth\n      .GoogleAuthProvide()\n      .then(authUser => {\n        console.log(\"authUser\", authUser);\n\n        db.doCreateUser(\n          //store some info from facebook into the firebase db\n          authUser.user.uid,\n          authUser.user.displayName,\n          authUser.user.email\n        )\n          .then(() => {\n            // this.setState({\n            //   ...INITIAL_STATE\n            // });\n            history.push(routes.HOME); //redirects to Home Page\n          })\n          .catch(error => {\n            this.setState(byPropKey(\"error\", error));\n          });\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n      });\n  };\n\n  timer = () => {\n    this.setState({\n      showingAlert: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        showingAlert: false\n      });\n    }, 4000);\n  };\n\n\n  render() {\n    const { email, password, error, showingAlert } = this.state;\n\n    const isInvalid = password === \"\" || email === \"\";\n\n    return (\n      <div>\n        {showingAlert && (\n          <Alert color=\"danger\" onLoad={this.timer}>\n            {error.message}\n          </Alert>\n        )}\n\n        <Form onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"exampleEmail\"\n              placeholder=\"user@gmail.com\"\n              value={email}\n              onChange={event =>\n                this.setState(byPropKey(\"email\", event.target.value))\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword\"\n              placeholder=\"pass-test\"\n              value={password}\n              onChange={event =>\n                this.setState(byPropKey(\"password\", event.target.value))\n              }\n            />\n          </FormGroup>\n\n          <div className=\"text-center\">\n            <Button disabled={isInvalid} type=\"submit\">\n              Sign In\n            </Button>\n          </div>\n        </Form>\n\n        <hr />\n\n        <GoogleLoginButton onClick={this.facebookLogin} />\n        <br></br>\n        <p>\n          NOTE: University Suggestor is only accessible by signed in users.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignInPage);\n\nexport { SignInForm };\n\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport AuthUserContext from \"./AuthUserContext\";\nimport { firebase } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\nconst withAuthorization = authCondition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        if (!authCondition(authUser)) {\n          //if the authorization fails, redirects to sign in page\n          this.props.history.push(routes.SIGN_IN);\n        }\n      });\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {/* it either renders the passed component or not */}\n          {authUser =>\n            authUser ? (\n              <Component {...this.props} loggedUser={authUser} />\n            ) : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withRouter(WithAuthorization); //using withRouter so we have access to history props\n};\n\nexport default withAuthorization;\n","import React, { Component } from \"react\";\nimport {storage} from '../firebase/auth';\nimport withAuthorization from \"./withAuthorization\";\nimport { db } from \"../firebase\";\nimport Select from 'react-select';\nimport axios from 'axios';\n// import ReactDom from 'react-dom';\n\nclass HomePage extends Component {\n  state = {\n    users: null,\n    username: '',\n    loading: true,\n    first_name: '',\n    last_name: '',\n    email: '',\n    grade: '',\n    update: 0,\n    gre: '',\n    we: '',\n    toefl:'',\n    resume: '',\n    sop: '',\n    entry: '',\n    uid: '',\n    redirect: null,\n    lor1: '',\n    lor2: '',\n    lor3: '',\n    lor4: ''\n  };\n\n  \n  componentDidMount() {\n\n    const { loggedUser } = this.props;\n    if(loggedUser)\n    {\n    db.doGetAnUnser(loggedUser.uid).then(res => {\n      this.setState({\n        username: res.val().username,\n        email: res.val().email,\n        loading: false,\n        uid: loggedUser.uid\n      });\n      console.log(res.val())\n     \n    });\n    }\n    else{\n      this.props.history.push('/SignIn')\n    }\n  }\n\n  onChange = (e) => { \n    this.setState({ [e.target.name]: e.target.value })  \n  }\n  onSubmit = (e) => {\n    e.preventDefault()\n    console.log(this.state)\n    const fileInput1 = document.getElementById('file-id');\n    var resume1 = fileInput1.files[0];\n    const resume_name = this.state.uid + '_resume.pdf';\n    const fileInput2 = document.getElementById('file-id2');\n    var sop1 = fileInput2.files[0];\n    const sop_name = this.state.uid + '_sop.pdf';\n    if(resume1)\n    {\n      resume1 = new File([resume1], resume_name, { type: resume1.type });\n      console.log(resume1)\n      const uploadTask1 = storage.ref(`resume/${this.state.uid}/${resume1.name}`).put(resume1);\n      uploadTask1.on('state_changed', \n      (snapshot) => {\n        // progrss function ....\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n        console.log(progress)\n        // this.setState({progress});\n      }, \n      (error) => {\n           // error function ....\n        console.log(error);\n      });\n    }\n    if(sop1)\n    {\n    sop1 = new File([sop1], sop_name, { type: sop1.type });\n      const uploadTask2 = storage.ref(`sop/${this.state.uid}/${sop1.name}`).put(sop1);\n      \n    uploadTask2.on('state_changed', \n      (snapshot) => {\n        // progrss function ....\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n        console.log(progress)\n        // this.setState({progress});\n      }, \n      (error) => {\n           // error function ....\n        console.log(error);\n      });\n    }\n  \n      db.doCreateFrom(this.state.username,this.state.email,this.state.first_name,this.state.last_name,this.state.grade,this.state.gre,this.state.we,this.state.toefl,this.state.uid,this.state.lor1,this.state.lor2,this.state.lor3,this.state.lor4)\n          .then(() => {\n            this.props.history.push('/Predict')\n          })\n          .catch(error => {\n          });\n\n          axios.post('https://masters-backend-1.wl.r.appspot.com/', {\n            // username: this.state.username,\n            // first_name: this.state.first_name,\n            // last_name: this.state.last_name,\n            'email': (this.state.email).toString(),\n            'grade': this.state.grade,\n            'gre': this.state.gre,\n            'work_ex': this.state.we,\n            'toefl': this.state.toefl,\n            'uid': (this.state.uid).toString(),\n            'lor1': this.state.lor1,\n            'lor2': this.state.lor2,\n            'lor3': this.state.lor3,\n            'lor4': this.state.lor4\n          })\n          .then((response) => {\n            console.log(response);\n          }, (error) => {\n            console.log(error);\n          });\n\n  }\n\n  updateStatelor1(element) {\n    this.setState({\n      lor1: element\n    });\n    console.log(this.state.lor1.value)\n  }\n  updateStatelor2(element) {\n    this.setState({\n      lor2: element\n    });\n    console.log(this.state.lor2.value)\n  }\n  updateStatelor3(element) {\n    this.setState({\n      lor3: element\n    });\n    console.log(this.state.lor3.value)\n  }\n  updateStatelor4(element) {\n    this.setState({\n      lor4: element\n    });\n    console.log(this.state)\n  }\n\n  render() {\n    const { username, loading } = this.state;\n    var options = [\n        { value: '6' , label: 'Professor (or) Manager' },\n        { value: '4', label: 'Associate Professor (or) Team Leader' },\n        { value: '2', label: 'Assistant Professor (or) Co-Worker' }\n    ];\n\n    return (\n      <div>\n        <h1>University Suggestor</h1>\n        {!loading && <p className=\"centered\">Hello {username}!</p>}\n          <form noValidate onSubmit={this.onSubmit}>\n            <h1 className=\"h3 mb-3 font-weight-normal\">Fill this Form</h1>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">First name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"first_name\"\n                placeholder=\"Enter your first name\"\n                value={this.state.first_name}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Last name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"last_name\"\n                placeholder=\"Enter your last name\"\n                value={this.state.last_name}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"grade\">College CGPA</label>\n              <input\n                type=\"number\" \n                className=\"form-control\"\n                pattern=\"[0-9]*\"\n                name=\"grade\"\n                placeholder=\"Enter Score\"\n                value={this.state.grade}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"gre\">GRE</label>\n              <input\n                type=\"number\" \n                className=\"form-control\"\n                pattern=\"[0-9]*\"\n                name=\"gre\"\n                placeholder=\"Enter Score\"\n                value={this.state.gre}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"we\">Work Experience (Months)</label>\n              <input\n                type=\"number\" \n                className=\"form-control\"\n                pattern=\"[0-9]*\"\n                name=\"we\"\n                placeholder=\"Enter Months\"\n                value={this.state.we}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"toefl\">TOEFL/IELTS Score</label>\n              <input\n                type=\"number\" \n                className=\"form-control\"\n                pattern=\"[0-9]*\"\n                name=\"toefl\"\n                placeholder=\"Enter Score\"\n                value={this.state.toefl}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"lor1\">Designation of your LOR Provider 1</label>\n              <div>\n              <Select\n                name=\"lor1\"\n                defaultValue={{ label: \"None\", value: \"-1\" }}\n                value={this.state.lor1}\n                options={options}\n                onChange={this.updateStatelor1.bind(this)}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"lor2\">Designation of your LOR Provider 2</label>\n              <div>\n              <Select\n                name=\"lor2\"\n                defaultValue={{ label: \"None\", value: \"-1\" }}\n                value={this.state.lor2}\n                options={options}\n                onChange={this.updateStatelor2.bind(this)}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"lor3\">Designation of your LOR Provider 3</label>\n              <div>\n              <Select\n                name=\"lor3\"\n                defaultValue={{ label: \"None\", value: \"-1\" }}\n                value={this.state.lor3}\n                options={options}\n                onChange={this.updateStatelor3.bind(this)}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"lor4\">Designation of your LOR Provider 4</label>\n              <div>\n              <Select\n                name=\"lor4\"\n                defaultValue={{ label: \"None\", value: \"-1\" }}\n                value={this.state.lor4}\n                options={options}\n                onChange={this.updateStatelor4.bind(this)}\n              />\n            </div>\n          </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"resume\">Upload Resume</label>\n              <input\n                type=\"file\" \n                id=\"file-id\"\n                name=\"resume\"\n                className=\"form-control\"\n                // value={this.state.resume}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"sop\">Upload SOP</label>\n              <input\n                type=\"file\" \n                id=\"file-id2\"\n                name=\"sop\"\n                className=\"form-control\"\n                // value={this.state.sop}\n                // onChange={this.onChange}\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-lg btn-primary btn-block\"\n            >\n              Submit!\n            </button>\n          </form>\n          <br></br>\n        <p>\n          IMPORTANT : Make sure to fill all the fields or else confidence score of your univesity suggestion may reduce !!!!\n          </p>\n     \n        <p>\n          NOTE : This page is only accessible by signed in users.\n        </p>\n      </div>\n    );\n  }\n}\n\nconst authCondition = authUser => !!authUser;\n\nexport default withAuthorization(authCondition)(HomePage); //grants authorization to open endpoint if an user is signed in\n","import React, { Component } from \"react\";\nimport { Button, Form, Alert } from \"reactstrap\";\nimport withAuthorization from \"./withAuthorization\"; //redirects to sign in if user not signed in\nimport { auth } from \"../firebase\";\nimport { db } from \"../firebase\";\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nconst INITIAL_STATE = {\n  email: \"\",\n  error: null,\n  showingAlert: false\n};\n\nclass AccountPage extends Component {\n  componentDidMount() {\n\n    const { loggedUser } = this.props;\n    console.log(loggedUser.uid)\n    if(loggedUser)\n    {\n    db.doGetAnUnser(loggedUser.uid).then(res => {\n      this.setState({\n        email: res.val().email\n      });\n      console.log(res.val())\n     \n    });\n    }\n  }\n\nstate = { ...INITIAL_STATE };\n\n  onSubmit = event => {\n    const email = this.state.email;\n\n    auth\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n        this.timer(); //show alert message for some seconds\n      });\n    event.preventDefault();\n    setTimeout(function () {\n      window.location.reload(1);\n  }, 3000);  \n  };\n\n  timer = () => {\n    this.setState({\n      showingAlert: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        showingAlert: false\n      });\n    }, 4000);\n\n  };\n\n  render() {\n    const { error, showingAlert } = this.state;\n\n    return (\n      <div>\n        {showingAlert && (\n          <Alert color=\"danger\" onLoad={this.timer}>\n            {error.message}\n          </Alert>\n        )}\n        <br></br>\n        <h5>Reset Link will be sent to your Email</h5>\n        <br></br>\n        <Form onSubmit={this.onSubmit}>\n          <div className=\"text-center\">\n            <Button type=\"submit\">\n              Reset My Password\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst authCondition = authUser =>\n  !!authUser && authUser.providerData[0].providerId !== \"facebook.com\"; //true and false\n\nexport default withAuthorization(authCondition)(AccountPage);","import React, { Component } from \"react\";\n\n\nclass Predict extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Under Construction</h1>\n        <div>\n        <h4>Thank you for your patience!!!!</h4>\n        </div>\n        </div>\n    );\n  }\n}\n\n\nexport default Predict;","// import React, { Component } from \"react\";\nimport React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport \"./App.css\";\n\n// import { firebase } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\n//nav stuff\nimport Navigation from \"./Navigation\";\nimport LandingPage from \"./Landing\";\nimport SignUpPage from \"./SignUp\";\nimport SignInPage from \"./SignIn\";\nimport PasswordForgetPage from \"./PasswordForget\";\nimport HomePage from \"./Home\";\nimport AccountPage from \"./Account\";\nimport Predict from \"./Predict\";\n// import PasswordForgetaccount from \"./PasswordForgetaccount\";\n\nimport withAuthentication from \"./withAuthentication\";\n/*eslint-disable */\nconst App = () => (\n  <BrowserRouter>\n    <Container>\n      <Navigation />\n\n      <Route exact path={routes.LANDING} component={LandingPage} />\n      <Route exact path={routes.SIGN_UP} component={SignUpPage} />\n      <Route exact path={routes.SIGN_IN} component={SignInPage} />\n      <Route exact path={routes.PREDICT} component={Predict} />\n      {/* <Route exact path={routes.PasswordForgetaccount} component={PasswordForgetaccount} /> */}\n      <Route\n        exact\n        path={routes.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route exact path={routes.HOME} component={HomePage} />\n      <Route exact path={routes.ACCOUNT} component={AccountPage} />\n    </Container>\n  </BrowserRouter>\n);\n\nexport default withAuthentication(App); //using HoC to handle session\n// const PORT = process.env.PORT || 8080;\n// app.listen(PORT, () => {\n//   console.log(`App listening on port ${PORT}`);\n//   console.log('Press Ctrl+C to quit.');\n// });\n","import React from \"react\";\nimport { firebase } from \"../firebase\";\n\nimport AuthUserContext from \"./AuthUserContext\"; //using provider's context api\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    state = {\n      authUser: null\n    };\n\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    render() {\n      const { authUser } = this.state;\n      console.log(\"withAuthentication file authUser\", authUser);\n      return (\n        <AuthUserContext.Provider value={authUser}>\n          <Component {...this.props}></Component>\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return WithAuthentication;\n};\n\nexport default withAuthentication;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App ></App>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}